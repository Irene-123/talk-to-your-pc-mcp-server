# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
    
    - name: Test package installation
      run: |
        pip install -e .
    
    - name: Test CLI command
      run: |
        talk-to-your-pc-mcp-server --help
    
    - name: Test imports
      run: |
        python -c "import talk_to_your_pc_mcp_server; print('Package imports successfully')"
        python -c "from talk_to_your_pc_mcp_server.cli import cli; print('CLI function imports successfully')"

  release-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Build release distributions
      run: |
        python -m build
    
    - name: Check distributions
      run: |
        python -m twine check dist/*
    
    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    
    environment:
      name: pypi
      url: https://pypi.org/project/talk-to-pc-mcp/
    
    steps:
    - name: Retrieve release distributions
      uses: actions/download-artifact@v4
      with:
        name: release-dists
        path: dist/
    
    - name: Publish release distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
